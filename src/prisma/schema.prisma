generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Comentario {
  idComentario          Int                 @id(map: "PK__Comentar__C74515DA5DBA68EE") @default(autoincrement())
  dataCriacaoComentario DateTime            @db.Date
  texto                 String              @db.NVarChar(500)
  pontosComentario      Int
  quantidadeDenuncias   Int
  idUsuario             Int
  idPost                Int
  Post                  Post                @relation(fields: [idPost], references: [idPost], onUpdate: NoAction, map: "fk_ComentarioPost")
  Usuario               Usuario             @relation(fields: [idUsuario], references: [idUsuario], onUpdate: NoAction, map: "fk_ComentarioUsuario")
  UsuarioComentario     UsuarioComentario[]
}

model Conquista {
  idConquista      Int                @id(map: "PK__Conquist__6830F5783665BDCA") @default(autoincrement())
  nome             String             @unique(map: "UQ__Conquist__6F71C0DCEB7B1FE3") @db.VarChar(50)
  nivel            Int
  imagem           String             @db.VarChar(200)
  UsuarioConquista UsuarioConquista[]

  @@index([nome, nivel, imagem], map: "ixConquistas")
}

model LogPost {
  idLogPost     Int       @id(map: "PK__LogPost__0F74D39A5D327BA6") @default(autoincrement())
  quemModificou Int
  idPost        Int
  Alterado      String    @db.VarChar(20)
  Moderador     Moderador @relation(fields: [quemModificou], references: [idModerador], onUpdate: NoAction, map: "fk_LogPostModerador")
  Post          Post      @relation(fields: [idPost], references: [idPost], onUpdate: NoAction, map: "fk_LogPostPost")
}

model Moderador {
  idModerador Int       @id(map: "PK__Moderado__243A9D3CBB3B7C34") @default(autoincrement())
  nome        String    @db.VarChar(50)
  email       String    @unique(map: "UQ__Moderado__AB6E61647F860A5D") @db.VarChar(80)
  senha       String    @db.VarChar(20)
  LogPost     LogPost[]
  Post        Post[]
}

model Post {
  idPost              Int           @id(map: "PK__Post__BE0F4FD632DE13D7") @default(autoincrement())
  titulo              String        @db.NVarChar(100)
  conteudo            String        @db.NVarChar(4000)
  pontosPost          Int
  dataCriacaoPost     DateTime      @db.Date
  capa                String?       @db.VarChar(200)
  aprovado            Boolean
  quantidadeDenuncias Int           @default(0, map: "DF__Post__quantidade__2F10007B")
  idUsuario           Int
  quemModificou       Int?
  Comentario          Comentario[]
  LogPost             LogPost[]
  Moderador           Moderador?    @relation(fields: [quemModificou], references: [idModerador], onDelete: NoAction, onUpdate: NoAction, map: "fk_PostModerador")
  Usuario             Usuario       @relation(fields: [idUsuario], references: [idUsuario], onUpdate: NoAction, map: "fk_PostUsuario")
  PostTopico          PostTopico[]
  UsuarioPost         UsuarioPost[]

  @@index([idPost, titulo, pontosPost, dataCriacaoPost, capa], map: "ixPost")
}

model PostTopico {
  idPostTopico Int    @id(map: "PK__PostTopi__B42693E4840E1537") @default(autoincrement())
  idPost       Int
  idTopico     Int
  Post         Post   @relation(fields: [idPost], references: [idPost], onUpdate: NoAction, map: "fk_PostTopico")
  Topico       Topico @relation(fields: [idTopico], references: [idTopico], onUpdate: NoAction, map: "fk_TopicoPost")
}

model Topico {
  idTopico   Int          @id(map: "PK__Topico__35539279F37AF783") @default(autoincrement())
  nome       String       @unique(map: "UQ__Topico__6F71C0DCE7556968") @db.VarChar(50)
  PostTopico PostTopico[]

  @@index([nome], map: "ixTopicos")
}

model Usuario {
  idUsuario                                         Int                 @id(map: "PK__Usuario__645723A60DEECF63") @default(autoincrement())
  nome                                              String              @db.NVarChar(50)
  username                                          String              @unique(map: "UQ__Usuario__F3DBC5728D3FB8DD") @db.VarChar(30)
  descricao                                         String              @db.VarChar(400)
  fotoPerfil                                        String              @db.VarChar(200)
  senha                                             String              @db.VarChar(20)
  ativo                                             Boolean
  quantidadeDenuncias                               Int
  dataCriacaoUsuario                                DateTime            @db.Date
  email                                             String              @unique(map: "UQ__Usuario__AB6E6164F1D4FD5B") @db.VarChar(80)
  Comentario                                        Comentario[]
  Post                                              Post[]
  UsuarioComentario                                 UsuarioComentario[]
  UsuarioConquista                                  UsuarioConquista[]
  UsuarioPost                                       UsuarioPost[]
  UsuarioUsuario_UsuarioUsuario_idUsuario1ToUsuario UsuarioUsuario[]    @relation("UsuarioUsuario_idUsuario1ToUsuario")
  UsuarioUsuario_UsuarioUsuario_idUsuario2ToUsuario UsuarioUsuario[]    @relation("UsuarioUsuario_idUsuario2ToUsuario")
}

model UsuarioComentario {
  idUsuarioComentario Int        @id(map: "PK__UsuarioC__CB174B77E6E4C192") @default(autoincrement())
  idUsuario           Int
  idComentario        Int
  denunciado          Boolean
  curtido             Boolean?
  Comentario          Comentario @relation(fields: [idComentario], references: [idComentario], onUpdate: NoAction, map: "fk_ComentarioUsuarioComentario")
  Usuario             Usuario    @relation(fields: [idUsuario], references: [idUsuario], onUpdate: NoAction, map: "fk_UsuarioUsuarioComentario")
}

model UsuarioConquista {
  idUsuarioConquista Int       @id(map: "PK__UsuarioC__63FA1BD185454CC4") @default(autoincrement())
  idUsuario          Int
  idConquista        Int
  Conquista          Conquista @relation(fields: [idConquista], references: [idConquista], onUpdate: NoAction, map: "fk_ConquistaUsuario")
  Usuario            Usuario   @relation(fields: [idUsuario], references: [idUsuario], onUpdate: NoAction, map: "fk_UsuarioConquista")
}

model UsuarioPost {
  idUsuarioPost Int      @id(map: "PK__UsuarioP__B1E30F30101AEB82") @default(autoincrement())
  idUsuario     Int
  idPost        Int
  denunciado    Boolean
  curtido       Boolean?
  Post          Post     @relation(fields: [idPost], references: [idPost], onUpdate: NoAction, map: "fk_PostUsuarioPost")
  Usuario       Usuario  @relation(fields: [idUsuario], references: [idUsuario], onUpdate: NoAction, map: "fk_UsuarioUsuarioPost")
}

model UsuarioUsuario {
  idUsuarioUsuario                           Int     @id(map: "PK__UsuarioU__9EA7B6DCD0990B94") @default(autoincrement())
  idUsuario1                                 Int
  idUsuario2                                 Int
  confirmado                                 Boolean
  denunciado                                 Boolean
  Usuario_UsuarioUsuario_idUsuario1ToUsuario Usuario @relation("UsuarioUsuario_idUsuario1ToUsuario", fields: [idUsuario1], references: [idUsuario], onUpdate: NoAction, map: "fk_AmigoUsuario1")
  Usuario_UsuarioUsuario_idUsuario2ToUsuario Usuario @relation("UsuarioUsuario_idUsuario2ToUsuario", fields: [idUsuario2], references: [idUsuario], onUpdate: NoAction, map: "fk_AmigoUsuario2")
}
